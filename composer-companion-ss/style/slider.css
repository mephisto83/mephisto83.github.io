.slider-container * {
    --hl: 0;
    --nothl: calc(1 - var(--hl));
    margin: 0;
  }
  
  .slider-body {
    display: grid;
    place-content: center;
    box-sizing: content-box;
    width: 100%;
    overflow-x: hidden;
  }
  
  .slider-container {
    --color1: grey;
    --color2: #95a;
    --color3: transparent;
    --color4: #fff;
  }
  .slider-container .wrap {
    --w: 20em;
    --h: 1.75em;
    --d: var(--h);
    --r: calc(.5*var(--d));
    --uw: calc(var(--w) - var(--d));
    --dif: calc(var(--max) - var(--min));
    display: grid;
    grid-template-rows: max-content var(--h) max-content;
    grid-gap: 0.625em;
    overflow: hidden;
    position: relative;
    margin: 1em -1.5em;
    padding: 0 2em;
    width: var(--w);
    box-sizing: content-box;
    font: 700 1.125em ubuntu mono, consolas, monaco, monospace;
  }
  .slider-container .wrap::before, .slider-container .wrap::after {
    grid-column: 1;
    grid-row: 2;
    align-self: center;
    height: 6px;
    border-radius: var(--r);
    background: repeating-linear-gradient(-45deg, var(--color1), var(--color1) 3px, var(--color3) 0, var(--color3) 7px) var(--color4);
    color: #eee;
    --mask: linear-gradient(red, red), var(--hole);
    /* non-standard WebKit version */
    -webkit-mask: var(--mask);
    -webkit-mask-composite: xor;
    /* standard version, supported in Firefox */
    mask: var(--mask);
    mask-composite: exclude;
    content: "";
  }
  .slider-container .wrap::after {
    background: var(--color2);
    filter: Grayscale(var(--nothl));
    --mask: var(--fill);
    transition: filter 0.3s ease-out;
  }
  .slider-container .wrap:focus-within {
    --hl: 1 ;
  }
  .slider-container .sr-only {
    position: absolute;
    clip-path: inset(50%);
  }
  .slider-container input[type=range] {
    grid-column: 1;
    grid-row: 2;
    z-index: calc(1 + var(--hl));
    top: 0;
    left: 0;
    background: none;
    /* get rid of white Chrome background */
    filter: grayScale(var(--nothl));
    transition: filter 0.3s ease-out;
    cursor: grab;
    pointer-events: none;
  }
  .slider-container input[type=range]::-webkit-slider-runnable-track, .slider-container input[type=range]::-webkit-slider-thumb, .slider-container input[type=range] {
    -webkit-appearance: none;
  }
  .slider-container input[type=range]::-webkit-slider-runnable-track {
    width: 100%;
    height: 100%;
    background: none;
  }
  .slider-container input[type=range]::-moz-range-track {
    width: 100%;
    height: 100%;
    background: none;
  }
  .slider-container input[type=range]::-webkit-slider-thumb {
    box-sizing: border-box;
    /* different between Chrome & Firefox */
    /* box-sizing needed now that we have a non-zero border */
    border: solid calc(.5*var(--r)) transparent;
    width: var(--d);
    height: var(--d);
    border-radius: 50%;
    /* make circular */
    transform: scale(calc(1 - .5*var(--nothl)));
    background: #f90;
    transition: transform 0.3s ease-out;
    pointer-events: auto;
  }
  .slider-container input[type=range]::-moz-range-thumb {
    box-sizing: border-box;
    /* different between Chrome & Firefox */
    /* box-sizing needed now that we have a non-zero border */
    border: solid calc(.5*var(--r)) transparent;
    width: var(--d);
    height: var(--d);
    border-radius: 50%;
    /* make circular */
    transform: scale(calc(1 - .5*var(--nothl)));
    background: #f90;
    transition: transform 0.3s ease-out;
    pointer-events: auto;
  }
  .slider-container input[type=range]:focus {
    outline: solid 0 transparent;
  }
  .slider-container input[type=range]:focus, .slider-container input[type=range]:focus + output {
    --hl: 1 ;
  }
  .slider-container input[type=range]:active {
    cursor: grabbing;
  }
  .slider-container output {
    grid-column: 1;
    grid-row: 3;
    margin-left: var(--r);
    max-width: max-content;
    transform: translate(calc((var(--c) - var(--min))/var(--dif)*var(--uw)));
  }
  .slider-container output::after {
    display: block;
    border-radius: 5px;
    padding: 0 0.375em;
    transform: translate(-50%) scale(var(--hl));
    background: #f90;
    color: var(--color4);
    transition: transform 0.3s ease-out;
    counter-reset: c var(--c);
    content: counter(c);
  }
  .slider-container output.out::after {
    content: attr(out)
  }